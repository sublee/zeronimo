language: python
python:
- 2.7
- pypy
env:
  global:
  # Target versions:
  - ZMQ_VERSION=4.1.5
  - PYZMQ_VERSION=15.4.0
  matrix:
  -
  # The latest versions under development:
  - PYZMQ_VERSION=
  - ZMQ_VERSION=
  - PYZMQ_VERSION= ZMQ_VERSION=
  # Older PyZMQ versions:
  - PYZMQ_VERSION=15.3.0
  - PYZMQ_VERSION=15.2.0
  - PYZMQ_VERSION=15.1.0
  - PYZMQ_VERSION=15.0.0
  - PYZMQ_VERSION=14.7.0
  - PYZMQ_VERSION=14.6.0
  - PYZMQ_VERSION=14.5.0
  - PYZMQ_VERSION=14.4.1
  - PYZMQ_VERSION=14.4.0
  - PYZMQ_VERSION=14.3.1
  - PYZMQ_VERSION=14.3.0
  - PYZMQ_VERSION=14.2.0
  - PYZMQ_VERSION=14.1.0
  - PYZMQ_VERSION=14.0.1
  - PYZMQ_VERSION=14.0.0
  # Older ZeroMQ versions:
  - ZMQ_VERSION=4.1.4
  - ZMQ_VERSION=4.1.3
  - ZMQ_VERSION=4.1.2
  - ZMQ_VERSION=4.1.1
  - ZMQ_VERSION=4.1.0-rc1
  - ZMQ_VERSION=4.0.8
  - ZMQ_VERSION=4.0.7
  - ZMQ_VERSION=4.0.6
  - ZMQ_VERSION=4.0.5
  - ZMQ_VERSION=4.0.4
  - ZMQ_VERSION=4.0.3
  - ZMQ_VERSION=4.0.2
  - ZMQ_VERSION=4.0.1
  - ZMQ_VERSION=3.2.5
  - ZMQ_VERSION=3.2.4
  - ZMQ_VERSION=3.2.3
  - ZMQ_VERSION=3.2.2
  - ZMQ_VERSION=2.2.0
  - ZMQ_VERSION=2.1.11
  - ZMQ_VERSION=2.1.10
  - ZMQ_VERSION=2.1.9
  - ZMQ_VERSION=2.1.8-rc
  - ZMQ_VERSION=2.1.7
  - ZMQ_VERSION=2.1.4
  # Broken ZeroMQ versions:
  # - ZMQ_VERSION=2.1.6
  # - ZMQ_VERSION=2.1.5
  # PyZMQ supports only >=2.1.4, >=3.2.2, >=4.0.1, and >=4.2.0.
  # - ZMQ_VERSION=4.0.0
  # - ZMQ_VERSION=3.2.1
  # - ZMQ_VERSION=3.2.0
  # - ZMQ_VERSION=3.1.0
  # - ZMQ_VERSION=2.1.3
  # - ZMQ_VERSION=2.1.2
  # - ZMQ_VERSION=2.1.1
  # - ZMQ_VERSION=2.1.0
matrix:
  allow_failures:
  - env: PYZMQ_VERSION=
  - env: ZMQ_VERSION=
  - env: PYZMQ_VERSION= ZMQ_VERSION=
before_install:
- set -e
- sudo apt-get update -qq
- | # Install ZeroMQ.
  cd $TRAVIS_BUILD_DIR
  if [[ -z "$ZMQ_VERSION" ]]
  then
    # Use the latest version of ZeroMQ if not specified.
    git clone https://github.com/zeromq/libzmq.git
    cd libzmq
    ./autogen.sh
  else
    mkdir src && cd src
    if [[ "$ZMQ_VERSION" == 4.1.* ]]
    then
      ZMQ_REPO="zeromq4-1"
    elif [[ "$ZMQ_VERSION" == 4.* ]]
    then
      ZMQ_REPO="zeromq4-x"
    elif [[ "$ZMQ_VERSION" == 3.* ]]
    then
      ZMQ_REPO="zeromq3-x"
    elif [[ "$ZMQ_VERSION" == 2.* ]]
    then
      ZMQ_REPO="zeromq2-x"
    fi
    ZMQ_REPO_URL="https://github.com/zeromq/$ZMQ_REPO"
    ZMQ_URL="$ZMQ_REPO_URL/releases/download"
    ZMQ_URL="$ZMQ_URL/v$(sed 's/-.\+//' <<< $ZMQ_VERSION)"
    ZMQ_URL="$ZMQ_URL/zeromq-$ZMQ_VERSION.tar.gz"
    if ! curl -L $ZMQ_URL | tar xz
    then
      # There's no release.  Build from a commit archive.
      ZMQ_URL="$ZMQ_REPO_URL/archive/v$ZMQ_VERSION.tar.gz"
      curl -L $ZMQ_URL | tar xz
      cd zeromq*
      ./autogen.sh
    else
      # Released officially.
      cd zeromq-*
    fi
  fi
  if [[ "$ZMQ_VERSION" == 4.1.* ]] || [[ -z "$ZMQ_VERSION" ]]
  then
    # zeromq-4.1.x requires libpgm and libsodium.
    sudo apt-get install libpgm-dev
    # ZeroMQ installation fails with libsodium-1.0.6:
    # https://github.com/zeromq/libzmq/issues/1632
    git clone -b 1.0.5 https://github.com/jedisct1/libsodium.git
    cd libsodium
    ./autogen.sh
    ./configure
    make check
    sudo make install
    sudo ldconfig
    cd ..
  fi
  if [[ "$ZMQ_VERSION" == 2.* ]]
  then
    # Dependencies of zeromq-2.x.
    sudo apt-get install uuid-dev
  fi
  sudo apt-get install autoconf libtool
  ./configure --with-pgm --prefix=$TRAVIS_BUILD_DIR/local
  make
  make install
- | # Install PyZMQ.
  cd $TRAVIS_BUILD_DIR
  # There was a compiling error with Cython-0.24.
  # (http://askubuntu.com/questions/739340/pyzmq-compiling-error)
  pip install cython==0.23.5
  git clone -b v$PYZMQ_VERSION https://github.com/zeromq/pyzmq.git pyzmq
  cd pyzmq
  python setup.py clean
  python setup.py configure --zmq=$TRAVIS_BUILD_DIR/local
  python setup.py build_ext --inplace
  pip install -e .
install:
- pip install -e $TRAVIS_BUILD_DIR
- pip install pytest pytest-rerunfailures psutil singledispatch
- pip install flake8 pytest-cov coveralls
script:
- |
  cd $TRAVIS_BUILD_DIR
  flake8 zeronimo test.py conftest.py setup.py -v --show-source
  py.test -v --inproc --ipc --tcp --epgm --incremental-patience --cov=zeronimo
after_success:
- coveralls
